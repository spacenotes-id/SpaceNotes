basePath: /v1
consumes:
- application/json
definitions:
  dto.RegisterRequest:
    properties:
      email:
        example: me@tfkhdyt.my.id
        type: string
      full_name:
        example: Taufik Hidayat
        maxLength: 70
        minLength: 2
        type: string
      password:
        example: bruh1234
        minLength: 8
        type: string
      username:
        example: tfkhdyt
        maxLength: 16
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  dto.RegisterResponse:
    properties:
      data:
        $ref: '#/definitions/dto.RegisterResponseData'
      message:
        example: Your account has been created successfully
        type: string
    type: object
  dto.RegisterResponseData:
    properties:
      created_at:
        example: "2023-09-04T21:00:43.775157Z"
        type: string
      email:
        example: me@tfkhdyt.my.id
        type: string
      full_name:
        example: Taufik Hidayat
        type: string
      id:
        example: 69
        type: integer
      username:
        example: tfkhdyt
        type: string
    type: object
  exception.HttpError:
    properties:
      error:
        example: Something went wrong
        type: string
    type: object
  exception.ValErrors:
    properties:
      errors:
        example:
        - Invalid email
        - Username is required
        items:
          type: string
        type: array
    type: object
host: localhost:8080
info:
  contact:
    email: me@tfkhdyt.my.id
    name: API Support
    url: https://tfkhdyt.my.id
  description: SpaceNotes REST API server
  license:
    name: MIT License
    url: https://github.com/spacenotes-id/server/blob/main/LICENSE
  title: SpaceNotes API
  version: "1.0"
paths:
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new account
      parameters:
      - description: Request body
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/exception.HttpError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/exception.ValErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/exception.HttpError'
      summary: Register
      tags:
      - auth
produces:
- application/json
securityDefinitions:
  ApiKeyAuth:
    description: JWT key
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
